[API_KEYS]
# Consumer key and secret for Tumblr API can be found by creating an app at https://www.tumblr.com/oauth/apps and generating a key and secret.
tumblr_consumer_key =
tumblr_consumer_secret =
# OpenAI API key can be found at https://platform.openai.com/account/api-keys
openai_api_key =

[TOKENS]
# Tumblr OAuth token and secret have to be generated by the user. I suggest you follow the instructions at the top of the README for https://github.com/tumblr/pytumblr
tumblr_oauth_token =
tumblr_oauth_token_secret =

[TUMBLR]
# Tumblr blog URL, must be in the format of blogname.tumblr.com and must be a blog that you own (associated with the same account as the OAuth token)
tumblr_url =
# The earliest year that you want to collect posts from. This is useful if you have a large blog and don't want to collect all posts. Set to 1970 to collect all posts.
max_year = 1970

[OPENAI]
# Prompt for the OpenAI API. This is the prompt that will be sent to the API to generate the text. This is the "user" prompt. It will be used both in the training and generation of the model.
prompt = Please write a comical tumblr post.
# System message to use for the OpenAI API. This is the system message that will be used to generate the text.
system = You are a Tumblr post bot. Please generate a tumblr post in accordance with the users request.
# Model to use for the OpenAI API. This is the model that will be used to generate the text. You need to first generate the training data for this model using the create_training_data.py script.
# If you want more details on how to do this, please check this post out: https://www.tumblr.com/q4u/760805046849077248/how-did-you-make-that-bot-its-so-cool?source=share
model =


