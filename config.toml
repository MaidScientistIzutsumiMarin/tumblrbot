# The user message for the OpenAI API. This is the prompt that will be sent to the API to generate the text.
user_message = "Write a comical Tumblr post."
# The name of the model that will be fine-tuned by the generated training data.
model_name = "gpt-4.1-nano"

[generation]
# The name of the blog which generated drafts will be uploaded to that appears in the URL.
# This must be a blog associated with the same account as the configured Tumblr secret values.
# Examples: "staff" for https://staff.tumblr.com and "changes" for https://tumblr.com/changes or https://tumblr.com/@changes
blogname = ""
# The number of drafts to process. This will affect the number of tokens used with OpenAI.
# Setting to 0 will disable draft generation.
draft_count = 150
# The chance to generate tags for any given post. This will incur extra calls to OpenAI.
# Setting to 0 will disable tag generation. 0.1 is a 10% chance.
tags_chance = 0.1

[training]
# The name of the blog which generated drafts will be uploaded to that appears in the URL.
# This must be a blog associated with the same account as the configured Tumblr secret values.
# Examples: ["staff", "changes"] for https://staff.tumblr.com and https://www.tumblr.com/changes or https://www.tumblr.com/@changes
blognames = []
# Where to store downloaded post data.
data_directory = "data"
# Where to output the training data that will be used to fine-tune the model.
# This can include directories.
output_file = "training.jsonl"
# The number of epochs fine-tuning will be run for.
target_epochs = 3
# The max output tokens for the current model.
max_output_tokens = 32768
# The expected price in USD per million tokens during fine-tuning for the current model.
# Setting to 0 will treat fine-tuning as free.
token_price = 1.50
